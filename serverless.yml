service: so-many-jobz

plugins:
  - serverless-offline


custom:
  stage: "${opt:stage, self:provider.stage}"
  MY_API_KEY : '1945643ATYGHZT'

provider:
  name: aws
  stage : dev
  runtime: nodejs6.10
  memorySize : 128
  timeout : 30
  region: us-east-1
  profile : dev
  apiKeys: # List of API keys to be used by your service API Gateway REST API
    - client_key # this key will never change
  usagePlan: # Optional usage plan configuration
    quota:
      limit: 5000
      offset: 2
      period: DAY
    throttle:
      burstLimit: 1000
      rateLimit: 500
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  create-job:
    environment : ${file(env/jobs.yml):${self:custom.stage}}
    handler: functions/jobs.create
    events:
      - http:
          path: jobs
          method: post
          cors: true
          private : true
  list-jobs:
    environment : ${file(env/jobs.yml):${self:custom.stage}}
    handler: functions/jobs.all
    events:
      - http:
          path: jobs
          method: get
          cors: true
          private : true
  get-job:
    environment : ${file(env/jobs.yml):${self:custom.stage}}
    handler: functions/jobs.get
    events:
      - http:
          path: jobs/{id}
          method: get
          cors: true
          private : true
  delete-job:
    environment : ${file(env/jobs.yml):${self:custom.stage}}
    handler: functions/jobs.delete
    events:
      - http:
          path: jobs/{id}
          method: delete
          cors: true
          private : true
